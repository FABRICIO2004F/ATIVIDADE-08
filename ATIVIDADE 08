#include <stdio.h>

int main() {
    int idade, contador_otimo = 0, contador_bom = 0, contador_regular = 0, contador_ruim = 0, contador_pessimo = 0;
    int idade_ruim_total = 0, idade_otimo_max = -1, idade_ruim_max = -1;
    int contador_geral = 0; // Contador geral de todas as pessoas cadastradas
    char continuar; // Variavel para decidir se a pesquisa deve continuar

    do {
        contador_geral++; // Incrementar o contador geral

        printf("Resposta %d:\n", contador_geral);
        printf("Idade: ");
        scanf("%d", &idade);

        char opiniao;
        printf("Opiniao (A/B/C/D/E): ");
        scanf(" %c", &opiniao);

        switch (opiniao) {
            case 'A':
                contador_otimo++;
                if (idade > idade_otimo_max) {
                    idade_otimo_max = idade;
                }
                break;
            case 'B':
                contador_bom++;
                break;
            case 'C':
                contador_regular++;
                break;
            case 'D':
                contador_ruim++;
                idade_ruim_total += idade;
                if (idade > idade_ruim_max) {
                    idade_ruim_max = idade;
                }
                break;
            case 'E':
                contador_pessimo++;
                break;
            default:
                printf("Opcao invalida.\n");
                contador_geral--; // Nao incrementar o contador geral se a opcao for invalida
                continue; // Repetir a entrada
        }

        printf("Deseja continuar a pesquisa (S/N)? ");
        scanf(" %c", &continuar);

    } while (continuar == 'S' || continuar == 's');

    printf("Quantidade de respostas Otimo: %d\n", contador_otimo);
    printf("Diferenca percentual entre respostas Bom e Regular: %.2f%%\n", (float)(contador_bom - contador_regular) / (contador_bom + contador_regular) * 100);
    
    if (contador_ruim > 0) {
        printf("Media de idade das pessoas que responderam Ruim: %.2f\n", (float)idade_ruim_total / contador_ruim);
        printf("Percentagem de respostas Pessimo: %.2f%%\n", (float)contador_pessimo / contador_geral * 100);
        printf("Maior idade que utilizou a opcao Pessimo: %d\n", idade_ruim_max);
        if (idade_otimo_max != -1) {
            printf("Diferenca de idade entre a maior idade que respondeu Otimo e a maior idade que respondeu Ruim: %d\n", idade_otimo_max - idade_ruim_max);
        }
    } else {
        printf("Nenhuma resposta Ruim.\n");
    }

    printf("Contador geral de todas as pessoas cadastradas: %d\n", contador_geral);

    return 0;
}
#include <stdio.h>
#include <limits.h> // Para usar INT_MAX como valor inicial
#include <ctype.h>  // Para usar a função tolower

int main() {
    int contador_elevador_a = 0, contador_elevador_b = 0, contador_elevador_c = 0;
    int contador_matutino = 0, contador_vespertino = 0, contador_noturno = 0;
    char elevador, periodo;
    int menor_contagem_periodo = INT_MAX; // Inicializado com um valor alto

    char continuar; // Variável para decidir se a pesquisa deve continuar

    do {
        for (int i = 0; i < 5; i++) {
            printf("Pessoa %d:\n", i + 1);
            printf("Elevador mais utilizado (A/B/C): ");
            scanf(" %c", &elevador);
            elevador = tolower(elevador); // Converter para minúsculas
            printf("Periodo de utilizacao (M/V/N): ");
            scanf(" %c", &periodo);
            periodo = tolower(periodo); // Converter para minúsculas

            switch (elevador) {
                case 'a':
                    contador_elevador_a++;
                    break;
                case 'b':
                    contador_elevador_b++;
                    break;
                case 'c':
                    contador_elevador_c++;
                    break;
                default:
                    printf("Opcao de elevador invalida.\n");
                    i--; // Repetir a entrada
                    continue;
            }

            switch (periodo) {
                case 'm':
                    contador_matutino++;
                    break;
                case 'v':
                    contador_vespertino++;
                    break;
                case 'n':
                    contador_noturno++;
                    break;
                default:
                    printf("Opcao de periodo invalida.\n");
                    i--; // Repetir a entrada
            }

            // Atualizar a menor contagem de período se necessário
            if (contador_matutino < menor_contagem_periodo) {
                menor_contagem_periodo = contador_matutino;
            }
            if (contador_vespertino < menor_contagem_periodo) {
                menor_contagem_periodo = contador_vespertino;
            }
            if (contador_noturno < menor_contagem_periodo) {
                menor_contagem_periodo = contador_noturno;
            }
        }

        char elevador_mais_usado;
        int maior_contagem_elevador = 0;
        if (contador_elevador_a > maior_contagem_elevador) {
            maior_contagem_elevador = contador_elevador_a;
            elevador_mais_usado = 'A';
        }
        if (contador_elevador_b > maior_contagem_elevador) {
            maior_contagem_elevador = contador_elevador_b;
            elevador_mais_usado = 'B';
        }
        if (contador_elevador_c > maior_contagem_elevador) {
            maior_contagem_elevador = contador_elevador_c;
            elevador_mais_usado = 'C';
        }

        char periodo_mais_usado;
        int maior_contagem_periodo = 0;
        if (contador_matutino > maior_contagem_periodo){
            maior_contagem_periodo = contador_matutino;
            periodo_mais_usado = 'M';
        }
        if (contador_vespertino > maior_contagem_periodo) {
            maior_contagem_periodo = contador_vespertino;
            periodo_mais_usado = 'V';
        }
        if (contador_noturno > maior_contagem_periodo) {
            maior_contagem_periodo = contador_noturno;
            periodo_mais_usado = 'N';
        }

        float diferenca_percentual = ((float)(maior_contagem_periodo - menor_contagem_periodo) / menor_contagem_periodo) * 100;

        printf("Periodo mais usado de todos: %c (Elevador %c)\n", periodo_mais_usado, elevador_mais_usado);
        printf("Elevador mais frequentado: %c (Periodo %c)\n", elevador_mais_usado, periodo_mais_usado);
        printf("Diferenca percentual entre o mais usado e o menos usado: %.2f%%\n", diferenca_percentual);

        // Solicitar ao usuário se deseja continuar
        printf("Deseja continuar com a pesquisa (S/N)? ");
        scanf(" %c", &continuar);

    } while (continuar == 'S' || continuar == 's');

    return 0;
}
#include <stdio.h>

int fibonacci(int n) {
    if (n <= 0) {
        return 0;
    } else if (n == 1) {
        return 1;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

int main() {
    int n;

    printf("Digite o valor de n: ");
    scanf("%d", &n);

    if (n < 0) {
        printf("O valor de n deve ser maior ou igual a zero.\n");
    } else {
        int resultado = fibonacci(n);
        printf("O %do termo da sequencia de Fibonacci e: %d\n", n, resultado);
    }

    return 0;
}
#include <stdio.h>

int main() {
    int numero;

    printf("Digite um numero positivo: ");
    scanf("%d", &numero);

    if (numero <= 0) {
        printf("O numero deve ser positivo.\n");
    } else {
        printf("Os divisores do numero %d sao: ", numero);
        for (int i = 1; i <= numero; i++) {
            if (numero % i == 0) {
                printf("%d ", i);
            }
        }
        printf("\n");
    }

    return 0;
}
#include <stdio.h>
#include <string.h>

#define MAX_JOGADORAS 5
#define MAX_ENTREVISTADOS 300

struct Jogadora {
    char nome[50];
    int votos;
};

int main() {
    struct Jogadora jogadoras[MAX_JOGADORAS];
    char nomes[MAX_JOGADORAS][50] = {"sam kerr - Australia", "alex morgan - Estados Unidos", "Dzsernifer Marozsan - Alemanha", "Amandine Henry - Franca", "Marta Vieira - Brasil"};
    int idade[MAX_ENTREVISTADOS];
    char sexo[MAX_ENTREVISTADOS];
    char voto[MAX_ENTREVISTADOS];

    int num_entrevistados = 0;

    // Inicializar contadores de votos
    for (int i = 0; i < MAX_JOGADORAS; i++) {
        jogadoras[i].votos = 0;
    }

    while (1) {
        printf("Entrevistado %d:\n", num_entrevistados + 1);
        printf("Nome: ");
        scanf(" %[^\n]", nomes[num_entrevistados]);
        printf("Idade: ");
        scanf("%d", &idade[num_entrevistados]);
        printf("Sexo (M/F): ");
        scanf(" %c", &sexo[num_entrevistados]);
        printf("Voto (1-5): ");
        scanf(" %c", &voto[num_entrevistados]);

        // Verificar se o voto e valido
        if (voto[num_entrevistados] < '1' || voto[num_entrevistados] > '5') {
            printf("Opcao de voto invalida.\n");
            continue;
        }

        // Contabilizar o voto
        int indice_jogadora = voto[num_entrevistados] - '1';
        jogadoras[indice_jogadora].votos++;

        num_entrevistados++;

        char continuar;
        printf("Deseja continuar (S/?)? ");
        scanf(" %c", &continuar);

        if (continuar != 'S' && continuar != 's') {
            break;
        }
    }

    // Encontrar a jogadora mais votada
    int max_votos = jogadoras[0].votos;
    printf("Resultado da pesquisa:\n");
    printf("Jogadoras e quantidade de votos:\n");
    for (int i = 0; i < MAX_JOGADORAS; i++) {
        printf("%s: %d votos\n", nomes[i], jogadoras[i].votos);
        if (jogadoras[i].votos > max_votos) {
            max_votos = jogadoras[i].votos;
        }
    }

    printf("\nJogadoras mais votadas:\n");
    for (int i = 0; i < MAX_JOGADORAS; i++) {
        if (jogadoras[i].votos == max_votos) {
            printf("%s\n", nomes[i]);
        }
    }

    // Exibir informacoes sobre os entrevistados
    printf("\nInformacoes dos entrevistados:\n");
    int mulheres = 0, homens = 0, maiores_idade = 0, menores_idade = 0;
    for (int i = 0; i < num_entrevistados; i++) {
        printf("Nome: %s\n", nomes[i]);
        printf("Idade: %d\n", idade[i]);
        printf("Sexo: %c\n", sexo[i]);
        if (sexo[i] == 'M' || sexo[i] == 'm') {
            homens++;
        } else if (sexo[i] == 'F' || sexo[i] == 'f') {
            mulheres++;
        }
        if (idade[i] >= 18) {
            maiores_idade++;
        } else {
            menores_idade++;
        }
    }

    printf("\nQuantidade de homens: %d\n", homens);
    printf("Quantidade de mulheres: %d\n", mulheres);
    printf("Quantidade de maiores de idade: %d\n", maiores_idade);
    printf("Quantidade de menores de idade: %d\n", menores_idade);

    // Exibir maiores de idade que votaram na Marta Vieira
    printf("\nMaiores de idade que votaram na Marta Vieira:\n");
    for (int i = 0; i < num_entrevistados; i++) {
        if (idade[i] >= 18 && strstr(nomes[i], "Marta Vieira") != NULL) {
            printf("Nome: %s\n", nomes[i]);
        }
    }

    return 0;
}
#include <stdio.h>

int main() {
    int ano, mes, dias;

    while (1) {
        printf("Digite o mes (1-12) e o ano (ex: 9 2023): ");
        scanf("%d %d", &mes, &ano);

        if (mes < 1 || mes > 12) {
            printf("Mes invalido.\n");
            continue;
        }

        if (ano % 4 == 0 && (ano % 100 != 0 || ano % 400 == 0)) {
            // Ano bissexto
            switch (mes) {
                case 2:
                    dias = 29;
                    break;
                case 4: case 6: case 9: case 11:
                    dias = 30;
                    break;
                default:
                    dias = 31;
                    break;
            }
        } else {
            // Ano nao bissexto
            switch (mes) {
                case 2:
                    dias = 28;
                    break;
                case 4: case 6: case 9: case 11:
                    dias = 30;
                    break;
                default:
                    dias = 31;
                    break;
            }
        }

        printf("O mes %d/%d tem %d dias.\n", mes, ano, dias);

        char continuar;
        printf("VOCE DESEJA OUTRAS ENTRADAS (S/?)? ");
        scanf(" %c", &continuar);

        if (continuar != 'S' && continuar != 's') {
            break;
        }
    }

    return 0;
}
#include <stdio.h>

int main() {
    int num_pessoas = 10;
    char nome[50];
    char sexo;
    float altura, peso;
    int num_homens = 0, num_mulheres = 0;
    float altura_total_homens = 0, altura_total_mulheres = 0, altura_total_grupo = 0;
    float peso_total_homens = 0, peso_total_mulheres = 0, peso_total_grupo = 0;

    for (int i = 0; i < num_pessoas; i++) {
        printf("Pessoa %d:\n", i + 1);
        printf("Nome: ");
        scanf(" %[^\n]", nome);
        printf("Sexo (M/F): ");
        scanf(" %c", &sexo);
        printf("Altura (em metros): ");
        scanf("%f", &altura);
        printf("Peso (em kg): ");
        scanf("%f", &peso);

        if (sexo == 'M' || sexo == 'm') {
            num_homens++;
            altura_total_homens += altura;
            peso_total_homens += peso;
        } else if (sexo == 'F' || sexo == 'f') {
            num_mulheres++;
            altura_total_mulheres += altura;
            peso_total_mulheres += peso;
        } else {
            printf("Sexo invalido.\n");
            i--; // Repetir a entrada
        }

        altura_total_grupo += altura;
        peso_total_grupo += peso;
    }

    printf("Numero de homens: %d\n", num_homens);
    printf("Numero de mulheres: %d\n", num_mulheres);

    if (num_homens > 0) {
        printf("Altura media dos homens: %.2f metros\n", altura_total_homens / num_homens);
        printf("Peso medio dos homens: %.2f kg\n", peso_total_homens / num_homens);
    } else {
        printf("Nenhum homem no grupo.\n");
    }

    if (num_mulheres > 0) {
        printf("Altura media das mulheres: %.2f metros\n", altura_total_mulheres / num_mulheres);
        printf("Peso medio das mulheres: %.2f kg\n", peso_total_mulheres / num_mulheres);
    } else {
        printf("Nenhuma mulher no grupo.\n");
    }

    printf("Altura media do grupo: %.2f metros\n", altura_total_grupo / num_pessoas);
    printf("Peso medio do grupo: %.2f kg\n", peso_total_grupo / num_pessoas);

    return 0;
}
